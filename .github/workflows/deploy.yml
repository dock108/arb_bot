name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # - name: Test the application
    #   run: |
    #     # Add your test commands here
    #     python -m unittest discover

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Authenticate Docker with Google Artifact Registry
      uses: google-github-actions/auth@v2.1.3
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker for Artifact Registry
      run: echo '{"credHelpers":{"us-east1-docker.pkg.dev":"gcloud"}}' > ~/.docker/config.json

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/arb-bot/arbitrage-bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
        
      - name: Install gke-gcloud-auth-plugin
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
    
      - name: Authenticate kubectl
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: "true"
          cluster: ${{ secrets.GCP_CLUSTER_NAME }}
          zone: ${{ secrets.GCP_ZONE }} 
        run: |
          gcloud container clusters get-credentials ${cluster} --zone ${zone}
        
      - name: Update Deployment Image
        run: |
          kubectl set image deployment/arb-bot arbitrage-bot=us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/arb-bot/arbitrage-bot:latest

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml   